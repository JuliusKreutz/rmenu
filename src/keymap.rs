// x11-rs: Rust bindings for X11 libraries
// The X11 libraries are available under the MIT license.
// These bindings are public domain.

#![allow(unused)]
#![allow(non_upper_case_globals)]
const XK_BackSpace: u32 = 0xFF08;
const XK_Tab: u32 = 0xFF09;
const XK_Linefeed: u32 = 0xFF0A;
const XK_Clear: u32 = 0xFF0B;
const XK_Return: u32 = 0xFF0D;
const XK_Pause: u32 = 0xFF13;
const XK_Scroll_Lock: u32 = 0xFF14;
const XK_Sys_Req: u32 = 0xFF15;
const XK_Escape: u32 = 0xFF1B;
const XK_Delete: u32 = 0xFFFF;
const XK_Multi_key: u32 = 0xFF20;
const XK_Kanji: u32 = 0xFF21;
const XK_Muhenkan: u32 = 0xFF22;
const XK_Henkan_Mode: u32 = 0xFF23;
const XK_Henkan: u32 = 0xFF23;
const XK_Romaji: u32 = 0xFF24;
const XK_Hiragana: u32 = 0xFF25;
const XK_Katakana: u32 = 0xFF26;
const XK_Hiragana_Katakana: u32 = 0xFF27;
const XK_Zenkaku: u32 = 0xFF28;
const XK_Hankaku: u32 = 0xFF29;
const XK_Zenkaku_Hankaku: u32 = 0xFF2A;
const XK_Touroku: u32 = 0xFF2B;
const XK_Massyo: u32 = 0xFF2C;
const XK_Kana_Lock: u32 = 0xFF2D;
const XK_Kana_Shift: u32 = 0xFF2E;
const XK_Eisu_Shift: u32 = 0xFF2F;
const XK_Eisu_toggle: u32 = 0xFF30;
const XK_Home: u32 = 0xFF50;
const XK_Left: u32 = 0xFF51;
const XK_Up: u32 = 0xFF52;
const XK_Right: u32 = 0xFF53;
const XK_Down: u32 = 0xFF54;
const XK_Prior: u32 = 0xFF55;
const XK_Page_Up: u32 = 0xFF55;
const XK_Next: u32 = 0xFF56;
const XK_Page_Down: u32 = 0xFF56;
const XK_End: u32 = 0xFF57;
const XK_Begin: u32 = 0xFF58;
const XK_Win_L: u32 = 0xFF5B;
const XK_Win_R: u32 = 0xFF5C;
const XK_App: u32 = 0xFF5D;
const XK_Select: u32 = 0xFF60;
const XK_Print: u32 = 0xFF61;
const XK_Execute: u32 = 0xFF62;
const XK_Insert: u32 = 0xFF63;
const XK_Undo: u32 = 0xFF65;
const XK_Redo: u32 = 0xFF66;
const XK_Menu: u32 = 0xFF67;
const XK_Find: u32 = 0xFF68;
const XK_Cancel: u32 = 0xFF69;
const XK_Help: u32 = 0xFF6A;
const XK_Break: u32 = 0xFF6B;
const XK_Mode_switch: u32 = 0xFF7E;
const XK_script_switch: u32 = 0xFF7E;
const XK_Num_Lock: u32 = 0xFF7F;
const XK_KP_Space: u32 = 0xFF80;
const XK_KP_Tab: u32 = 0xFF89;
const XK_KP_Enter: u32 = 0xFF8D;
const XK_KP_F1: u32 = 0xFF91;
const XK_KP_F2: u32 = 0xFF92;
const XK_KP_F3: u32 = 0xFF93;
const XK_KP_F4: u32 = 0xFF94;
const XK_KP_Home: u32 = 0xFF95;
const XK_KP_Left: u32 = 0xFF96;
const XK_KP_Up: u32 = 0xFF97;
const XK_KP_Right: u32 = 0xFF98;
const XK_KP_Down: u32 = 0xFF99;
const XK_KP_Prior: u32 = 0xFF9A;
const XK_KP_Page_Up: u32 = 0xFF9A;
const XK_KP_Next: u32 = 0xFF9B;
const XK_KP_Page_Down: u32 = 0xFF9B;
const XK_KP_End: u32 = 0xFF9C;
const XK_KP_Begin: u32 = 0xFF9D;
const XK_KP_Insert: u32 = 0xFF9E;
const XK_KP_Delete: u32 = 0xFF9F;
const XK_KP_Equal: u32 = 0xFFBD;
const XK_KP_Multiply: u32 = 0xFFAA;
const XK_KP_Add: u32 = 0xFFAB;
const XK_KP_Separator: u32 = 0xFFAC;
const XK_KP_Subtract: u32 = 0xFFAD;
const XK_KP_Decimal: u32 = 0xFFAE;
const XK_KP_Divide: u32 = 0xFFAF;
const XK_KP_0: u32 = 0xFFB0;
const XK_KP_1: u32 = 0xFFB1;
const XK_KP_2: u32 = 0xFFB2;
const XK_KP_3: u32 = 0xFFB3;
const XK_KP_4: u32 = 0xFFB4;
const XK_KP_5: u32 = 0xFFB5;
const XK_KP_6: u32 = 0xFFB6;
const XK_KP_7: u32 = 0xFFB7;
const XK_KP_8: u32 = 0xFFB8;
const XK_KP_9: u32 = 0xFFB9;
const XK_F1: u32 = 0xFFBE;
const XK_F2: u32 = 0xFFBF;
const XK_F3: u32 = 0xFFC0;
const XK_F4: u32 = 0xFFC1;
const XK_F5: u32 = 0xFFC2;
const XK_F6: u32 = 0xFFC3;
const XK_F7: u32 = 0xFFC4;
const XK_F8: u32 = 0xFFC5;
const XK_F9: u32 = 0xFFC6;
const XK_F10: u32 = 0xFFC7;
const XK_F11: u32 = 0xFFC8;
const XK_L1: u32 = 0xFFC8;
const XK_F12: u32 = 0xFFC9;
const XK_L2: u32 = 0xFFC9;
const XK_F13: u32 = 0xFFCA;
const XK_L3: u32 = 0xFFCA;
const XK_F14: u32 = 0xFFCB;
const XK_L4: u32 = 0xFFCB;
const XK_F15: u32 = 0xFFCC;
const XK_L5: u32 = 0xFFCC;
const XK_F16: u32 = 0xFFCD;
const XK_L6: u32 = 0xFFCD;
const XK_F17: u32 = 0xFFCE;
const XK_L7: u32 = 0xFFCE;
const XK_F18: u32 = 0xFFCF;
const XK_L8: u32 = 0xFFCF;
const XK_F19: u32 = 0xFFD0;
const XK_L9: u32 = 0xFFD0;
const XK_F20: u32 = 0xFFD1;
const XK_L10: u32 = 0xFFD1;
const XK_F21: u32 = 0xFFD2;
const XK_R1: u32 = 0xFFD2;
const XK_F22: u32 = 0xFFD3;
const XK_R2: u32 = 0xFFD3;
const XK_F23: u32 = 0xFFD4;
const XK_R3: u32 = 0xFFD4;
const XK_F24: u32 = 0xFFD5;
const XK_R4: u32 = 0xFFD5;
const XK_F25: u32 = 0xFFD6;
const XK_R5: u32 = 0xFFD6;
const XK_F26: u32 = 0xFFD7;
const XK_R6: u32 = 0xFFD7;
const XK_F27: u32 = 0xFFD8;
const XK_R7: u32 = 0xFFD8;
const XK_F28: u32 = 0xFFD9;
const XK_R8: u32 = 0xFFD9;
const XK_F29: u32 = 0xFFDA;
const XK_R9: u32 = 0xFFDA;
const XK_F30: u32 = 0xFFDB;
const XK_R10: u32 = 0xFFDB;
const XK_F31: u32 = 0xFFDC;
const XK_R11: u32 = 0xFFDC;
const XK_F32: u32 = 0xFFDD;
const XK_R12: u32 = 0xFFDD;
const XK_F33: u32 = 0xFFDE;
const XK_R13: u32 = 0xFFDE;
const XK_F34: u32 = 0xFFDF;
const XK_R14: u32 = 0xFFDF;
const XK_F35: u32 = 0xFFE0;
const XK_R15: u32 = 0xFFE0;
const XK_Shift_L: u32 = 0xFFE1;
const XK_Shift_R: u32 = 0xFFE2;
const XK_Control_L: u32 = 0xFFE3;
const XK_Control_R: u32 = 0xFFE4;
const XK_Caps_Lock: u32 = 0xFFE5;
const XK_Shift_Lock: u32 = 0xFFE6;
const XK_Meta_L: u32 = 0xFFE7;
const XK_Meta_R: u32 = 0xFFE8;
const XK_Alt_L: u32 = 0xFFE9;
const XK_Alt_R: u32 = 0xFFEA;
const XK_Super_L: u32 = 0xFFEB;
const XK_Super_R: u32 = 0xFFEC;
const XK_Hyper_L: u32 = 0xFFED;
const XK_Hyper_R: u32 = 0xFFEE;
const XK_space: u32 = 0x020;
const XK_exclam: u32 = 0x021;
const XK_quotedbl: u32 = 0x022;
const XK_numbersign: u32 = 0x023;
const XK_dollar: u32 = 0x024;
const XK_percent: u32 = 0x025;
const XK_ampersand: u32 = 0x026;
const XK_apostrophe: u32 = 0x027;
const XK_quoteright: u32 = 0x027;
const XK_parenleft: u32 = 0x028;
const XK_parenright: u32 = 0x029;
const XK_asterisk: u32 = 0x02a;
const XK_plus: u32 = 0x02b;
const XK_comma: u32 = 0x02c;
const XK_minus: u32 = 0x02d;
const XK_period: u32 = 0x02e;
const XK_slash: u32 = 0x02f;
const XK_0: u32 = 0x030;
const XK_1: u32 = 0x031;
const XK_2: u32 = 0x032;
const XK_3: u32 = 0x033;
const XK_4: u32 = 0x034;
const XK_5: u32 = 0x035;
const XK_6: u32 = 0x036;
const XK_7: u32 = 0x037;
const XK_8: u32 = 0x038;
const XK_9: u32 = 0x039;
const XK_colon: u32 = 0x03a;
const XK_semicolon: u32 = 0x03b;
const XK_less: u32 = 0x03c;
const XK_equal: u32 = 0x03d;
const XK_greater: u32 = 0x03e;
const XK_question: u32 = 0x03f;
const XK_at: u32 = 0x040;
const XK_A: u32 = 0x041;
const XK_B: u32 = 0x042;
const XK_C: u32 = 0x043;
const XK_D: u32 = 0x044;
const XK_E: u32 = 0x045;
const XK_F: u32 = 0x046;
const XK_G: u32 = 0x047;
const XK_H: u32 = 0x048;
const XK_I: u32 = 0x049;
const XK_J: u32 = 0x04a;
const XK_K: u32 = 0x04b;
const XK_L: u32 = 0x04c;
const XK_M: u32 = 0x04d;
const XK_N: u32 = 0x04e;
const XK_O: u32 = 0x04f;
const XK_P: u32 = 0x050;
const XK_Q: u32 = 0x051;
const XK_R: u32 = 0x052;
const XK_S: u32 = 0x053;
const XK_T: u32 = 0x054;
const XK_U: u32 = 0x055;
const XK_V: u32 = 0x056;
const XK_W: u32 = 0x057;
const XK_X: u32 = 0x058;
const XK_Y: u32 = 0x059;
const XK_Z: u32 = 0x05a;
const XK_bracketleft: u32 = 0x05b;
const XK_backslash: u32 = 0x05c;
const XK_bracketright: u32 = 0x05d;
const XK_asciicircum: u32 = 0x05e;
const XK_underscore: u32 = 0x05f;
const XK_grave: u32 = 0x060;
const XK_quoteleft: u32 = 0x060;
const XK_a: u32 = 0x061;
const XK_b: u32 = 0x062;
const XK_c: u32 = 0x063;
const XK_d: u32 = 0x064;
const XK_e: u32 = 0x065;
const XK_f: u32 = 0x066;
const XK_g: u32 = 0x067;
const XK_h: u32 = 0x068;
const XK_i: u32 = 0x069;
const XK_j: u32 = 0x06a;
const XK_k: u32 = 0x06b;
const XK_l: u32 = 0x06c;
const XK_m: u32 = 0x06d;
const XK_n: u32 = 0x06e;
const XK_o: u32 = 0x06f;
const XK_p: u32 = 0x070;
const XK_q: u32 = 0x071;
const XK_r: u32 = 0x072;
const XK_s: u32 = 0x073;
const XK_t: u32 = 0x074;
const XK_u: u32 = 0x075;
const XK_v: u32 = 0x076;
const XK_w: u32 = 0x077;
const XK_x: u32 = 0x078;
const XK_y: u32 = 0x079;
const XK_z: u32 = 0x07a;
const XK_braceleft: u32 = 0x07b;
const XK_bar: u32 = 0x07c;
const XK_braceright: u32 = 0x07d;
const XK_asciitilde: u32 = 0x07e;
const XK_nobreakspace: u32 = 0x0a0;
const XK_exclamdown: u32 = 0x0a1;
const XK_cent: u32 = 0x0a2;
const XK_sterling: u32 = 0x0a3;
const XK_currency: u32 = 0x0a4;
const XK_yen: u32 = 0x0a5;
const XK_brokenbar: u32 = 0x0a6;
const XK_section: u32 = 0x0a7;
const XK_diaeresis: u32 = 0x0a8;
const XK_copyright: u32 = 0x0a9;
const XK_ordfeminine: u32 = 0x0aa;
const XK_guillemotleft: u32 = 0x0ab;
const XK_notsign: u32 = 0x0ac;
const XK_hyphen: u32 = 0x0ad;
const XK_registered: u32 = 0x0ae;
const XK_macron: u32 = 0x0af;
const XK_degree: u32 = 0x0b0;
const XK_plusminus: u32 = 0x0b1;
const XK_twosuperior: u32 = 0x0b2;
const XK_threesuperior: u32 = 0x0b3;
const XK_acute: u32 = 0x0b4;
const XK_mu: u32 = 0x0b5;
const XK_paragraph: u32 = 0x0b6;
const XK_periodcentered: u32 = 0x0b7;
const XK_cedilla: u32 = 0x0b8;
const XK_onesuperior: u32 = 0x0b9;
const XK_masculine: u32 = 0x0ba;
const XK_guillemotright: u32 = 0x0bb;
const XK_onequarter: u32 = 0x0bc;
const XK_onehalf: u32 = 0x0bd;
const XK_threequarters: u32 = 0x0be;
const XK_questiondown: u32 = 0x0bf;
const XK_Agrave: u32 = 0x0c0;
const XK_Aacute: u32 = 0x0c1;
const XK_Acircumflex: u32 = 0x0c2;
const XK_Atilde: u32 = 0x0c3;
const XK_Adiaeresis: u32 = 0x0c4;
const XK_Aring: u32 = 0x0c5;
const XK_AE: u32 = 0x0c6;
const XK_Ccedilla: u32 = 0x0c7;
const XK_Egrave: u32 = 0x0c8;
const XK_Eacute: u32 = 0x0c9;
const XK_Ecircumflex: u32 = 0x0ca;
const XK_Ediaeresis: u32 = 0x0cb;
const XK_Igrave: u32 = 0x0cc;
const XK_Iacute: u32 = 0x0cd;
const XK_Icircumflex: u32 = 0x0ce;
const XK_Idiaeresis: u32 = 0x0cf;
const XK_ETH: u32 = 0x0d0;
const XK_Eth: u32 = 0x0d0;
const XK_Ntilde: u32 = 0x0d1;
const XK_Ograve: u32 = 0x0d2;
const XK_Oacute: u32 = 0x0d3;
const XK_Ocircumflex: u32 = 0x0d4;
const XK_Otilde: u32 = 0x0d5;
const XK_Odiaeresis: u32 = 0x0d6;
const XK_multiply: u32 = 0x0d7;
const XK_Ooblique: u32 = 0x0d8;
const XK_Ugrave: u32 = 0x0d9;
const XK_Uacute: u32 = 0x0da;
const XK_Ucircumflex: u32 = 0x0db;
const XK_Udiaeresis: u32 = 0x0dc;
const XK_Yacute: u32 = 0x0dd;
const XK_THORN: u32 = 0x0de;
const XK_Thorn: u32 = 0x0de;
const XK_ssharp: u32 = 0x0df;
const XK_agrave: u32 = 0x0e0;
const XK_aacute: u32 = 0x0e1;
const XK_acircumflex: u32 = 0x0e2;
const XK_atilde: u32 = 0x0e3;
const XK_adiaeresis: u32 = 0x0e4;
const XK_aring: u32 = 0x0e5;
const XK_ae: u32 = 0x0e6;
const XK_ccedilla: u32 = 0x0e7;
const XK_egrave: u32 = 0x0e8;
const XK_eacute: u32 = 0x0e9;
const XK_ecircumflex: u32 = 0x0ea;
const XK_ediaeresis: u32 = 0x0eb;
const XK_igrave: u32 = 0x0ec;
const XK_iacute: u32 = 0x0ed;
const XK_icircumflex: u32 = 0x0ee;
const XK_idiaeresis: u32 = 0x0ef;
const XK_eth: u32 = 0x0f0;
const XK_ntilde: u32 = 0x0f1;
const XK_ograve: u32 = 0x0f2;
const XK_oacute: u32 = 0x0f3;
const XK_ocircumflex: u32 = 0x0f4;
const XK_otilde: u32 = 0x0f5;
const XK_odiaeresis: u32 = 0x0f6;
const XK_division: u32 = 0x0f7;
const XK_oslash: u32 = 0x0f8;
const XK_ugrave: u32 = 0x0f9;
const XK_uacute: u32 = 0x0fa;
const XK_ucircumflex: u32 = 0x0fb;
const XK_udiaeresis: u32 = 0x0fc;
const XK_yacute: u32 = 0x0fd;
const XK_thorn: u32 = 0x0fe;
const XK_ydiaeresis: u32 = 0x0ff;
const XK_Aogonek: u32 = 0x1a1;
const XK_breve: u32 = 0x1a2;
const XK_Lstroke: u32 = 0x1a3;
const XK_Lcaron: u32 = 0x1a5;
const XK_Sacute: u32 = 0x1a6;
const XK_Scaron: u32 = 0x1a9;
const XK_Scedilla: u32 = 0x1aa;
const XK_Tcaron: u32 = 0x1ab;
const XK_Zacute: u32 = 0x1ac;
const XK_Zcaron: u32 = 0x1ae;
const XK_Zabovedot: u32 = 0x1af;
const XK_aogonek: u32 = 0x1b1;
const XK_ogonek: u32 = 0x1b2;
const XK_lstroke: u32 = 0x1b3;
const XK_lcaron: u32 = 0x1b5;
const XK_sacute: u32 = 0x1b6;
const XK_caron: u32 = 0x1b7;
const XK_scaron: u32 = 0x1b9;
const XK_scedilla: u32 = 0x1ba;
const XK_tcaron: u32 = 0x1bb;
const XK_zacute: u32 = 0x1bc;
const XK_doubleacute: u32 = 0x1bd;
const XK_zcaron: u32 = 0x1be;
const XK_zabovedot: u32 = 0x1bf;
const XK_Racute: u32 = 0x1c0;
const XK_Abreve: u32 = 0x1c3;
const XK_Lacute: u32 = 0x1c5;
const XK_Cacute: u32 = 0x1c6;
const XK_Ccaron: u32 = 0x1c8;
const XK_Eogonek: u32 = 0x1ca;
const XK_Ecaron: u32 = 0x1cc;
const XK_Dcaron: u32 = 0x1cf;
const XK_Dstroke: u32 = 0x1d0;
const XK_Nacute: u32 = 0x1d1;
const XK_Ncaron: u32 = 0x1d2;
const XK_Odoubleacute: u32 = 0x1d5;
const XK_Rcaron: u32 = 0x1d8;
const XK_Uring: u32 = 0x1d9;
const XK_Udoubleacute: u32 = 0x1db;
const XK_Tcedilla: u32 = 0x1de;
const XK_racute: u32 = 0x1e0;
const XK_abreve: u32 = 0x1e3;
const XK_lacute: u32 = 0x1e5;
const XK_cacute: u32 = 0x1e6;
const XK_ccaron: u32 = 0x1e8;
const XK_eogonek: u32 = 0x1ea;
const XK_ecaron: u32 = 0x1ec;
const XK_dcaron: u32 = 0x1ef;
const XK_dstroke: u32 = 0x1f0;
const XK_nacute: u32 = 0x1f1;
const XK_ncaron: u32 = 0x1f2;
const XK_odoubleacute: u32 = 0x1f5;
const XK_udoubleacute: u32 = 0x1fb;
const XK_rcaron: u32 = 0x1f8;
const XK_uring: u32 = 0x1f9;
const XK_tcedilla: u32 = 0x1fe;
const XK_abovedot: u32 = 0x1ff;
const XK_Hstroke: u32 = 0x2a1;
const XK_Hcircumflex: u32 = 0x2a6;
const XK_Iabovedot: u32 = 0x2a9;
const XK_Gbreve: u32 = 0x2ab;
const XK_Jcircumflex: u32 = 0x2ac;
const XK_hstroke: u32 = 0x2b1;
const XK_hcircumflex: u32 = 0x2b6;
const XK_idotless: u32 = 0x2b9;
const XK_gbreve: u32 = 0x2bb;
const XK_jcircumflex: u32 = 0x2bc;
const XK_Cabovedot: u32 = 0x2c5;
const XK_Ccircumflex: u32 = 0x2c6;
const XK_Gabovedot: u32 = 0x2d5;
const XK_Gcircumflex: u32 = 0x2d8;
const XK_Ubreve: u32 = 0x2dd;
const XK_Scircumflex: u32 = 0x2de;
const XK_cabovedot: u32 = 0x2e5;
const XK_ccircumflex: u32 = 0x2e6;
const XK_gabovedot: u32 = 0x2f5;
const XK_gcircumflex: u32 = 0x2f8;
const XK_ubreve: u32 = 0x2fd;
const XK_scircumflex: u32 = 0x2fe;
const XK_kra: u32 = 0x3a2;
const XK_kappa: u32 = 0x3a2;
const XK_Rcedilla: u32 = 0x3a3;
const XK_Itilde: u32 = 0x3a5;
const XK_Lcedilla: u32 = 0x3a6;
const XK_Emacron: u32 = 0x3aa;
const XK_Gcedilla: u32 = 0x3ab;
const XK_Tslash: u32 = 0x3ac;
const XK_rcedilla: u32 = 0x3b3;
const XK_itilde: u32 = 0x3b5;
const XK_lcedilla: u32 = 0x3b6;
const XK_emacron: u32 = 0x3ba;
const XK_gcedilla: u32 = 0x3bb;
const XK_tslash: u32 = 0x3bc;
const XK_ENG: u32 = 0x3bd;
const XK_eng: u32 = 0x3bf;
const XK_Amacron: u32 = 0x3c0;
const XK_Iogonek: u32 = 0x3c7;
const XK_Eabovedot: u32 = 0x3cc;
const XK_Imacron: u32 = 0x3cf;
const XK_Ncedilla: u32 = 0x3d1;
const XK_Omacron: u32 = 0x3d2;
const XK_Kcedilla: u32 = 0x3d3;
const XK_Uogonek: u32 = 0x3d9;
const XK_Utilde: u32 = 0x3dd;
const XK_Umacron: u32 = 0x3de;
const XK_amacron: u32 = 0x3e0;
const XK_iogonek: u32 = 0x3e7;
const XK_eabovedot: u32 = 0x3ec;
const XK_imacron: u32 = 0x3ef;
const XK_ncedilla: u32 = 0x3f1;
const XK_omacron: u32 = 0x3f2;
const XK_kcedilla: u32 = 0x3f3;
const XK_uogonek: u32 = 0x3f9;
const XK_utilde: u32 = 0x3fd;
const XK_umacron: u32 = 0x3fe;
const XK_overline: u32 = 0x47e;
const XK_kana_fullstop: u32 = 0x4a1;
const XK_kana_openingbracket: u32 = 0x4a2;
const XK_kana_closingbracket: u32 = 0x4a3;
const XK_kana_comma: u32 = 0x4a4;
const XK_kana_conjunctive: u32 = 0x4a5;
const XK_kana_middledot: u32 = 0x4a5;
const XK_kana_WO: u32 = 0x4a6;
const XK_kana_a: u32 = 0x4a7;
const XK_kana_i: u32 = 0x4a8;
const XK_kana_u: u32 = 0x4a9;
const XK_kana_e: u32 = 0x4aa;
const XK_kana_o: u32 = 0x4ab;
const XK_kana_ya: u32 = 0x4ac;
const XK_kana_yu: u32 = 0x4ad;
const XK_kana_yo: u32 = 0x4ae;
const XK_kana_tsu: u32 = 0x4af;
const XK_kana_tu: u32 = 0x4af;
const XK_prolongedsound: u32 = 0x4b0;
const XK_kana_A: u32 = 0x4b1;
const XK_kana_I: u32 = 0x4b2;
const XK_kana_U: u32 = 0x4b3;
const XK_kana_E: u32 = 0x4b4;
const XK_kana_O: u32 = 0x4b5;
const XK_kana_KA: u32 = 0x4b6;
const XK_kana_KI: u32 = 0x4b7;
const XK_kana_KU: u32 = 0x4b8;
const XK_kana_KE: u32 = 0x4b9;
const XK_kana_KO: u32 = 0x4ba;
const XK_kana_SA: u32 = 0x4bb;
const XK_kana_SHI: u32 = 0x4bc;
const XK_kana_SU: u32 = 0x4bd;
const XK_kana_SE: u32 = 0x4be;
const XK_kana_SO: u32 = 0x4bf;
const XK_kana_TA: u32 = 0x4c0;
const XK_kana_CHI: u32 = 0x4c1;
const XK_kana_TI: u32 = 0x4c1;
const XK_kana_TSU: u32 = 0x4c2;
const XK_kana_TU: u32 = 0x4c2;
const XK_kana_TE: u32 = 0x4c3;
const XK_kana_TO: u32 = 0x4c4;
const XK_kana_NA: u32 = 0x4c5;
const XK_kana_NI: u32 = 0x4c6;
const XK_kana_NU: u32 = 0x4c7;
const XK_kana_NE: u32 = 0x4c8;
const XK_kana_NO: u32 = 0x4c9;
const XK_kana_HA: u32 = 0x4ca;
const XK_kana_HI: u32 = 0x4cb;
const XK_kana_FU: u32 = 0x4cc;
const XK_kana_HU: u32 = 0x4cc;
const XK_kana_HE: u32 = 0x4cd;
const XK_kana_HO: u32 = 0x4ce;
const XK_kana_MA: u32 = 0x4cf;
const XK_kana_MI: u32 = 0x4d0;
const XK_kana_MU: u32 = 0x4d1;
const XK_kana_ME: u32 = 0x4d2;
const XK_kana_MO: u32 = 0x4d3;
const XK_kana_YA: u32 = 0x4d4;
const XK_kana_YU: u32 = 0x4d5;
const XK_kana_YO: u32 = 0x4d6;
const XK_kana_RA: u32 = 0x4d7;
const XK_kana_RI: u32 = 0x4d8;
const XK_kana_RU: u32 = 0x4d9;
const XK_kana_RE: u32 = 0x4da;
const XK_kana_RO: u32 = 0x4db;
const XK_kana_WA: u32 = 0x4dc;
const XK_kana_N: u32 = 0x4dd;
const XK_voicedsound: u32 = 0x4de;
const XK_semivoicedsound: u32 = 0x4df;
const XK_kana_switch: u32 = 0xFF7E;
const XK_Arabic_comma: u32 = 0x5ac;
const XK_Arabic_semicolon: u32 = 0x5bb;
const XK_Arabic_question_mark: u32 = 0x5bf;
const XK_Arabic_hamza: u32 = 0x5c1;
const XK_Arabic_maddaonalef: u32 = 0x5c2;
const XK_Arabic_hamzaonalef: u32 = 0x5c3;
const XK_Arabic_hamzaonwaw: u32 = 0x5c4;
const XK_Arabic_hamzaunderalef: u32 = 0x5c5;
const XK_Arabic_hamzaonyeh: u32 = 0x5c6;
const XK_Arabic_alef: u32 = 0x5c7;
const XK_Arabic_beh: u32 = 0x5c8;
const XK_Arabic_tehmarbuta: u32 = 0x5c9;
const XK_Arabic_teh: u32 = 0x5ca;
const XK_Arabic_theh: u32 = 0x5cb;
const XK_Arabic_jeem: u32 = 0x5cc;
const XK_Arabic_hah: u32 = 0x5cd;
const XK_Arabic_khah: u32 = 0x5ce;
const XK_Arabic_dal: u32 = 0x5cf;
const XK_Arabic_thal: u32 = 0x5d0;
const XK_Arabic_ra: u32 = 0x5d1;
const XK_Arabic_zain: u32 = 0x5d2;
const XK_Arabic_seen: u32 = 0x5d3;
const XK_Arabic_sheen: u32 = 0x5d4;
const XK_Arabic_sad: u32 = 0x5d5;
const XK_Arabic_dad: u32 = 0x5d6;
const XK_Arabic_tah: u32 = 0x5d7;
const XK_Arabic_zah: u32 = 0x5d8;
const XK_Arabic_ain: u32 = 0x5d9;
const XK_Arabic_ghain: u32 = 0x5da;
const XK_Arabic_tatweel: u32 = 0x5e0;
const XK_Arabic_feh: u32 = 0x5e1;
const XK_Arabic_qaf: u32 = 0x5e2;
const XK_Arabic_kaf: u32 = 0x5e3;
const XK_Arabic_lam: u32 = 0x5e4;
const XK_Arabic_meem: u32 = 0x5e5;
const XK_Arabic_noon: u32 = 0x5e6;
const XK_Arabic_ha: u32 = 0x5e7;
const XK_Arabic_heh: u32 = 0x5e7;
const XK_Arabic_waw: u32 = 0x5e8;
const XK_Arabic_alefmaksura: u32 = 0x5e9;
const XK_Arabic_yeh: u32 = 0x5ea;
const XK_Arabic_fathatan: u32 = 0x5eb;
const XK_Arabic_dammatan: u32 = 0x5ec;
const XK_Arabic_kasratan: u32 = 0x5ed;
const XK_Arabic_fatha: u32 = 0x5ee;
const XK_Arabic_damma: u32 = 0x5ef;
const XK_Arabic_kasra: u32 = 0x5f0;
const XK_Arabic_shadda: u32 = 0x5f1;
const XK_Arabic_sukun: u32 = 0x5f2;
const XK_Arabic_switch: u32 = 0xFF7E;
const XK_Serbian_dje: u32 = 0x6a1;
const XK_Macedonia_gje: u32 = 0x6a2;
const XK_Cyrillic_io: u32 = 0x6a3;
const XK_Ukrainian_ie: u32 = 0x6a4;
const XK_Ukranian_je: u32 = 0x6a4;
const XK_Macedonia_dse: u32 = 0x6a5;
const XK_Ukrainian_i: u32 = 0x6a6;
const XK_Ukranian_i: u32 = 0x6a6;
const XK_Ukrainian_yi: u32 = 0x6a7;
const XK_Ukranian_yi: u32 = 0x6a7;
const XK_Cyrillic_je: u32 = 0x6a8;
const XK_Serbian_je: u32 = 0x6a8;
const XK_Cyrillic_lje: u32 = 0x6a9;
const XK_Serbian_lje: u32 = 0x6a9;
const XK_Cyrillic_nje: u32 = 0x6aa;
const XK_Serbian_nje: u32 = 0x6aa;
const XK_Serbian_tshe: u32 = 0x6ab;
const XK_Macedonia_kje: u32 = 0x6ac;
const XK_Byelorussian_shortu: u32 = 0x6ae;
const XK_Cyrillic_dzhe: u32 = 0x6af;
const XK_Serbian_dze: u32 = 0x6af;
const XK_numerosign: u32 = 0x6b0;
const XK_Serbian_DJE: u32 = 0x6b1;
const XK_Macedonia_GJE: u32 = 0x6b2;
const XK_Cyrillic_IO: u32 = 0x6b3;
const XK_Ukrainian_IE: u32 = 0x6b4;
const XK_Ukranian_JE: u32 = 0x6b4;
const XK_Macedonia_DSE: u32 = 0x6b5;
const XK_Ukrainian_I: u32 = 0x6b6;
const XK_Ukranian_I: u32 = 0x6b6;
const XK_Ukrainian_YI: u32 = 0x6b7;
const XK_Ukranian_YI: u32 = 0x6b7;
const XK_Cyrillic_JE: u32 = 0x6b8;
const XK_Serbian_JE: u32 = 0x6b8;
const XK_Cyrillic_LJE: u32 = 0x6b9;
const XK_Serbian_LJE: u32 = 0x6b9;
const XK_Cyrillic_NJE: u32 = 0x6ba;
const XK_Serbian_NJE: u32 = 0x6ba;
const XK_Serbian_TSHE: u32 = 0x6bb;
const XK_Macedonia_KJE: u32 = 0x6bc;
const XK_Byelorussian_SHORTU: u32 = 0x6be;
const XK_Cyrillic_DZHE: u32 = 0x6bf;
const XK_Serbian_DZE: u32 = 0x6bf;
const XK_Cyrillic_yu: u32 = 0x6c0;
const XK_Cyrillic_a: u32 = 0x6c1;
const XK_Cyrillic_be: u32 = 0x6c2;
const XK_Cyrillic_tse: u32 = 0x6c3;
const XK_Cyrillic_de: u32 = 0x6c4;
const XK_Cyrillic_ie: u32 = 0x6c5;
const XK_Cyrillic_ef: u32 = 0x6c6;
const XK_Cyrillic_ghe: u32 = 0x6c7;
const XK_Cyrillic_ha: u32 = 0x6c8;
const XK_Cyrillic_i: u32 = 0x6c9;
const XK_Cyrillic_shorti: u32 = 0x6ca;
const XK_Cyrillic_ka: u32 = 0x6cb;
const XK_Cyrillic_el: u32 = 0x6cc;
const XK_Cyrillic_em: u32 = 0x6cd;
const XK_Cyrillic_en: u32 = 0x6ce;
const XK_Cyrillic_o: u32 = 0x6cf;
const XK_Cyrillic_pe: u32 = 0x6d0;
const XK_Cyrillic_ya: u32 = 0x6d1;
const XK_Cyrillic_er: u32 = 0x6d2;
const XK_Cyrillic_es: u32 = 0x6d3;
const XK_Cyrillic_te: u32 = 0x6d4;
const XK_Cyrillic_u: u32 = 0x6d5;
const XK_Cyrillic_zhe: u32 = 0x6d6;
const XK_Cyrillic_ve: u32 = 0x6d7;
const XK_Cyrillic_softsign: u32 = 0x6d8;
const XK_Cyrillic_yeru: u32 = 0x6d9;
const XK_Cyrillic_ze: u32 = 0x6da;
const XK_Cyrillic_sha: u32 = 0x6db;
const XK_Cyrillic_e: u32 = 0x6dc;
const XK_Cyrillic_shcha: u32 = 0x6dd;
const XK_Cyrillic_che: u32 = 0x6de;
const XK_Cyrillic_hardsign: u32 = 0x6df;
const XK_Cyrillic_YU: u32 = 0x6e0;
const XK_Cyrillic_A: u32 = 0x6e1;
const XK_Cyrillic_BE: u32 = 0x6e2;
const XK_Cyrillic_TSE: u32 = 0x6e3;
const XK_Cyrillic_DE: u32 = 0x6e4;
const XK_Cyrillic_IE: u32 = 0x6e5;
const XK_Cyrillic_EF: u32 = 0x6e6;
const XK_Cyrillic_GHE: u32 = 0x6e7;
const XK_Cyrillic_HA: u32 = 0x6e8;
const XK_Cyrillic_I: u32 = 0x6e9;
const XK_Cyrillic_SHORTI: u32 = 0x6ea;
const XK_Cyrillic_KA: u32 = 0x6eb;
const XK_Cyrillic_EL: u32 = 0x6ec;
const XK_Cyrillic_EM: u32 = 0x6ed;
const XK_Cyrillic_EN: u32 = 0x6ee;
const XK_Cyrillic_O: u32 = 0x6ef;
const XK_Cyrillic_PE: u32 = 0x6f0;
const XK_Cyrillic_YA: u32 = 0x6f1;
const XK_Cyrillic_ER: u32 = 0x6f2;
const XK_Cyrillic_ES: u32 = 0x6f3;
const XK_Cyrillic_TE: u32 = 0x6f4;
const XK_Cyrillic_U: u32 = 0x6f5;
const XK_Cyrillic_ZHE: u32 = 0x6f6;
const XK_Cyrillic_VE: u32 = 0x6f7;
const XK_Cyrillic_SOFTSIGN: u32 = 0x6f8;
const XK_Cyrillic_YERU: u32 = 0x6f9;
const XK_Cyrillic_ZE: u32 = 0x6fa;
const XK_Cyrillic_SHA: u32 = 0x6fb;
const XK_Cyrillic_E: u32 = 0x6fc;
const XK_Cyrillic_SHCHA: u32 = 0x6fd;
const XK_Cyrillic_CHE: u32 = 0x6fe;
const XK_Cyrillic_HARDSIGN: u32 = 0x6ff;
const XK_Greek_ALPHAaccent: u32 = 0x7a1;
const XK_Greek_EPSILONaccent: u32 = 0x7a2;
const XK_Greek_ETAaccent: u32 = 0x7a3;
const XK_Greek_IOTAaccent: u32 = 0x7a4;
const XK_Greek_IOTAdiaeresis: u32 = 0x7a5;
const XK_Greek_OMICRONaccent: u32 = 0x7a7;
const XK_Greek_UPSILONaccent: u32 = 0x7a8;
const XK_Greek_UPSILONdieresis: u32 = 0x7a9;
const XK_Greek_OMEGAaccent: u32 = 0x7ab;
const XK_Greek_accentdieresis: u32 = 0x7ae;
const XK_Greek_horizbar: u32 = 0x7af;
const XK_Greek_alphaaccent: u32 = 0x7b1;
const XK_Greek_epsilonaccent: u32 = 0x7b2;
const XK_Greek_etaaccent: u32 = 0x7b3;
const XK_Greek_iotaaccent: u32 = 0x7b4;
const XK_Greek_iotadieresis: u32 = 0x7b5;
const XK_Greek_iotaaccentdieresis: u32 = 0x7b6;
const XK_Greek_omicronaccent: u32 = 0x7b7;
const XK_Greek_upsilonaccent: u32 = 0x7b8;
const XK_Greek_upsilondieresis: u32 = 0x7b9;
const XK_Greek_upsilonaccentdieresis: u32 = 0x7ba;
const XK_Greek_omegaaccent: u32 = 0x7bb;
const XK_Greek_ALPHA: u32 = 0x7c1;
const XK_Greek_BETA: u32 = 0x7c2;
const XK_Greek_GAMMA: u32 = 0x7c3;
const XK_Greek_DELTA: u32 = 0x7c4;
const XK_Greek_EPSILON: u32 = 0x7c5;
const XK_Greek_ZETA: u32 = 0x7c6;
const XK_Greek_ETA: u32 = 0x7c7;
const XK_Greek_THETA: u32 = 0x7c8;
const XK_Greek_IOTA: u32 = 0x7c9;
const XK_Greek_KAPPA: u32 = 0x7ca;
const XK_Greek_LAMDA: u32 = 0x7cb;
const XK_Greek_LAMBDA: u32 = 0x7cb;
const XK_Greek_MU: u32 = 0x7cc;
const XK_Greek_NU: u32 = 0x7cd;
const XK_Greek_XI: u32 = 0x7ce;
const XK_Greek_OMICRON: u32 = 0x7cf;
const XK_Greek_PI: u32 = 0x7d0;
const XK_Greek_RHO: u32 = 0x7d1;
const XK_Greek_SIGMA: u32 = 0x7d2;
const XK_Greek_TAU: u32 = 0x7d4;
const XK_Greek_UPSILON: u32 = 0x7d5;
const XK_Greek_PHI: u32 = 0x7d6;
const XK_Greek_CHI: u32 = 0x7d7;
const XK_Greek_PSI: u32 = 0x7d8;
const XK_Greek_OMEGA: u32 = 0x7d9;
const XK_Greek_alpha: u32 = 0x7e1;
const XK_Greek_beta: u32 = 0x7e2;
const XK_Greek_gamma: u32 = 0x7e3;
const XK_Greek_delta: u32 = 0x7e4;
const XK_Greek_epsilon: u32 = 0x7e5;
const XK_Greek_zeta: u32 = 0x7e6;
const XK_Greek_eta: u32 = 0x7e7;
const XK_Greek_theta: u32 = 0x7e8;
const XK_Greek_iota: u32 = 0x7e9;
const XK_Greek_kappa: u32 = 0x7ea;
const XK_Greek_lamda: u32 = 0x7eb;
const XK_Greek_lambda: u32 = 0x7eb;
const XK_Greek_mu: u32 = 0x7ec;
const XK_Greek_nu: u32 = 0x7ed;
const XK_Greek_xi: u32 = 0x7ee;
const XK_Greek_omicron: u32 = 0x7ef;
const XK_Greek_pi: u32 = 0x7f0;
const XK_Greek_rho: u32 = 0x7f1;
const XK_Greek_sigma: u32 = 0x7f2;
const XK_Greek_finalsmallsigma: u32 = 0x7f3;
const XK_Greek_tau: u32 = 0x7f4;
const XK_Greek_upsilon: u32 = 0x7f5;
const XK_Greek_phi: u32 = 0x7f6;
const XK_Greek_chi: u32 = 0x7f7;
const XK_Greek_psi: u32 = 0x7f8;
const XK_Greek_omega: u32 = 0x7f9;
const XK_Greek_switch: u32 = 0xFF7E;
const XK_leftradical: u32 = 0x8a1;
const XK_topleftradical: u32 = 0x8a2;
const XK_horizconnector: u32 = 0x8a3;
const XK_topintegral: u32 = 0x8a4;
const XK_botintegral: u32 = 0x8a5;
const XK_vertconnector: u32 = 0x8a6;
const XK_topleftsqbracket: u32 = 0x8a7;
const XK_botleftsqbracket: u32 = 0x8a8;
const XK_toprightsqbracket: u32 = 0x8a9;
const XK_botrightsqbracket: u32 = 0x8aa;
const XK_topleftparens: u32 = 0x8ab;
const XK_botleftparens: u32 = 0x8ac;
const XK_toprightparens: u32 = 0x8ad;
const XK_botrightparens: u32 = 0x8ae;
const XK_leftmiddlecurlybrace: u32 = 0x8af;
const XK_rightmiddlecurlybrace: u32 = 0x8b0;
const XK_topleftsummation: u32 = 0x8b1;
const XK_botleftsummation: u32 = 0x8b2;
const XK_topvertsummationconnector: u32 = 0x8b3;
const XK_botvertsummationconnector: u32 = 0x8b4;
const XK_toprightsummation: u32 = 0x8b5;
const XK_botrightsummation: u32 = 0x8b6;
const XK_rightmiddlesummation: u32 = 0x8b7;
const XK_lessthanequal: u32 = 0x8bc;
const XK_notequal: u32 = 0x8bd;
const XK_greaterthanequal: u32 = 0x8be;
const XK_integral: u32 = 0x8bf;
const XK_therefore: u32 = 0x8c0;
const XK_variation: u32 = 0x8c1;
const XK_infinity: u32 = 0x8c2;
const XK_nabla: u32 = 0x8c5;
const XK_approximate: u32 = 0x8c8;
const XK_similarequal: u32 = 0x8c9;
const XK_ifonlyif: u32 = 0x8cd;
const XK_implies: u32 = 0x8ce;
const XK_identical: u32 = 0x8cf;
const XK_radical: u32 = 0x8d6;
const XK_includedin: u32 = 0x8da;
const XK_includes: u32 = 0x8db;
const XK_intersection: u32 = 0x8dc;
const XK_union: u32 = 0x8dd;
const XK_logicaland: u32 = 0x8de;
const XK_logicalor: u32 = 0x8df;
const XK_partialderivative: u32 = 0x8ef;
const XK_function: u32 = 0x8f6;
const XK_leftarrow: u32 = 0x8fb;
const XK_uparrow: u32 = 0x8fc;
const XK_rightarrow: u32 = 0x8fd;
const XK_downarrow: u32 = 0x8fe;
const XK_blank: u32 = 0x9df;
const XK_soliddiamond: u32 = 0x9e0;
const XK_checkerboard: u32 = 0x9e1;
const XK_ht: u32 = 0x9e2;
const XK_ff: u32 = 0x9e3;
const XK_cr: u32 = 0x9e4;
const XK_lf: u32 = 0x9e5;
const XK_nl: u32 = 0x9e8;
const XK_vt: u32 = 0x9e9;
const XK_lowrightcorner: u32 = 0x9ea;
const XK_uprightcorner: u32 = 0x9eb;
const XK_upleftcorner: u32 = 0x9ec;
const XK_lowleftcorner: u32 = 0x9ed;
const XK_crossinglines: u32 = 0x9ee;
const XK_horizlinescan1: u32 = 0x9ef;
const XK_horizlinescan3: u32 = 0x9f0;
const XK_horizlinescan5: u32 = 0x9f1;
const XK_horizlinescan7: u32 = 0x9f2;
const XK_horizlinescan9: u32 = 0x9f3;
const XK_leftt: u32 = 0x9f4;
const XK_rightt: u32 = 0x9f5;
const XK_bott: u32 = 0x9f6;
const XK_topt: u32 = 0x9f7;
const XK_vertbar: u32 = 0x9f8;
const XK_emspace: u32 = 0xaa1;
const XK_enspace: u32 = 0xaa2;
const XK_em3space: u32 = 0xaa3;
const XK_em4space: u32 = 0xaa4;
const XK_digitspace: u32 = 0xaa5;
const XK_punctspace: u32 = 0xaa6;
const XK_thinspace: u32 = 0xaa7;
const XK_hairspace: u32 = 0xaa8;
const XK_emdash: u32 = 0xaa9;
const XK_endash: u32 = 0xaaa;
const XK_signifblank: u32 = 0xaac;
const XK_ellipsis: u32 = 0xaae;
const XK_doubbaselinedot: u32 = 0xaaf;
const XK_onethird: u32 = 0xab0;
const XK_twothirds: u32 = 0xab1;
const XK_onefifth: u32 = 0xab2;
const XK_twofifths: u32 = 0xab3;
const XK_threefifths: u32 = 0xab4;
const XK_fourfifths: u32 = 0xab5;
const XK_onesixth: u32 = 0xab6;
const XK_fivesixths: u32 = 0xab7;
const XK_careof: u32 = 0xab8;
const XK_figdash: u32 = 0xabb;
const XK_leftanglebracket: u32 = 0xabc;
const XK_decimalpoint: u32 = 0xabd;
const XK_rightanglebracket: u32 = 0xabe;
const XK_marker: u32 = 0xabf;
const XK_oneeighth: u32 = 0xac3;
const XK_threeeighths: u32 = 0xac4;
const XK_fiveeighths: u32 = 0xac5;
const XK_seveneighths: u32 = 0xac6;
const XK_trademark: u32 = 0xac9;
const XK_signaturemark: u32 = 0xaca;
const XK_trademarkincircle: u32 = 0xacb;
const XK_leftopentriangle: u32 = 0xacc;
const XK_rightopentriangle: u32 = 0xacd;
const XK_emopencircle: u32 = 0xace;
const XK_emopenrectangle: u32 = 0xacf;
const XK_leftsinglequotemark: u32 = 0xad0;
const XK_rightsinglequotemark: u32 = 0xad1;
const XK_leftdoublequotemark: u32 = 0xad2;
const XK_rightdoublequotemark: u32 = 0xad3;
const XK_prescription: u32 = 0xad4;
const XK_minutes: u32 = 0xad6;
const XK_seconds: u32 = 0xad7;
const XK_latincross: u32 = 0xad9;
const XK_hexagram: u32 = 0xada;
const XK_filledrectbullet: u32 = 0xadb;
const XK_filledlefttribullet: u32 = 0xadc;
const XK_filledrighttribullet: u32 = 0xadd;
const XK_emfilledcircle: u32 = 0xade;
const XK_emfilledrect: u32 = 0xadf;
const XK_enopencircbullet: u32 = 0xae0;
const XK_enopensquarebullet: u32 = 0xae1;
const XK_openrectbullet: u32 = 0xae2;
const XK_opentribulletup: u32 = 0xae3;
const XK_opentribulletdown: u32 = 0xae4;
const XK_openstar: u32 = 0xae5;
const XK_enfilledcircbullet: u32 = 0xae6;
const XK_enfilledsqbullet: u32 = 0xae7;
const XK_filledtribulletup: u32 = 0xae8;
const XK_filledtribulletdown: u32 = 0xae9;
const XK_leftpointer: u32 = 0xaea;
const XK_rightpointer: u32 = 0xaeb;
const XK_club: u32 = 0xaec;
const XK_diamond: u32 = 0xaed;
const XK_heart: u32 = 0xaee;
const XK_maltesecross: u32 = 0xaf0;
const XK_dagger: u32 = 0xaf1;
const XK_doubledagger: u32 = 0xaf2;
const XK_checkmark: u32 = 0xaf3;
const XK_ballotcross: u32 = 0xaf4;
const XK_musicalsharp: u32 = 0xaf5;
const XK_musicalflat: u32 = 0xaf6;
const XK_malesymbol: u32 = 0xaf7;
const XK_femalesymbol: u32 = 0xaf8;
const XK_telephone: u32 = 0xaf9;
const XK_telephonerecorder: u32 = 0xafa;
const XK_phonographcopyright: u32 = 0xafb;
const XK_caret: u32 = 0xafc;
const XK_singlelowquotemark: u32 = 0xafd;
const XK_doublelowquotemark: u32 = 0xafe;
const XK_cursor: u32 = 0xaff;
const XK_leftcaret: u32 = 0xba3;
const XK_rightcaret: u32 = 0xba6;
const XK_downcaret: u32 = 0xba8;
const XK_upcaret: u32 = 0xba9;
const XK_overbar: u32 = 0xbc0;
const XK_downtack: u32 = 0xbc2;
const XK_upshoe: u32 = 0xbc3;
const XK_downstile: u32 = 0xbc4;
const XK_underbar: u32 = 0xbc6;
const XK_jot: u32 = 0xbca;
const XK_quad: u32 = 0xbcc;
const XK_uptack: u32 = 0xbce;
const XK_circle: u32 = 0xbcf;
const XK_upstile: u32 = 0xbd3;
const XK_downshoe: u32 = 0xbd6;
const XK_rightshoe: u32 = 0xbd8;
const XK_leftshoe: u32 = 0xbda;
const XK_lefttack: u32 = 0xbdc;
const XK_righttack: u32 = 0xbfc;
const XK_hebrew_doublelowline: u32 = 0xcdf;
const XK_hebrew_aleph: u32 = 0xce0;
const XK_hebrew_bet: u32 = 0xce1;
const XK_hebrew_beth: u32 = 0xce1;
const XK_hebrew_gimel: u32 = 0xce2;
const XK_hebrew_gimmel: u32 = 0xce2;
const XK_hebrew_dalet: u32 = 0xce3;
const XK_hebrew_daleth: u32 = 0xce3;
const XK_hebrew_he: u32 = 0xce4;
const XK_hebrew_waw: u32 = 0xce5;
const XK_hebrew_zain: u32 = 0xce6;
const XK_hebrew_zayin: u32 = 0xce6;
const XK_hebrew_chet: u32 = 0xce7;
const XK_hebrew_het: u32 = 0xce7;
const XK_hebrew_tet: u32 = 0xce8;
const XK_hebrew_teth: u32 = 0xce8;
const XK_hebrew_yod: u32 = 0xce9;
const XK_hebrew_finalkaph: u32 = 0xcea;
const XK_hebrew_kaph: u32 = 0xceb;
const XK_hebrew_lamed: u32 = 0xcec;
const XK_hebrew_finalmem: u32 = 0xced;
const XK_hebrew_mem: u32 = 0xcee;
const XK_hebrew_finalnun: u32 = 0xcef;
const XK_hebrew_nun: u32 = 0xcf0;
const XK_hebrew_samech: u32 = 0xcf1;
const XK_hebrew_samekh: u32 = 0xcf1;
const XK_hebrew_ayin: u32 = 0xcf2;
const XK_hebrew_finalpe: u32 = 0xcf3;
const XK_hebrew_pe: u32 = 0xcf4;
const XK_hebrew_finalzade: u32 = 0xcf5;
const XK_hebrew_finalzadi: u32 = 0xcf5;
const XK_hebrew_zade: u32 = 0xcf6;
const XK_hebrew_zadi: u32 = 0xcf6;
const XK_hebrew_qoph: u32 = 0xcf7;
const XK_hebrew_kuf: u32 = 0xcf7;
const XK_hebrew_resh: u32 = 0xcf8;
const XK_hebrew_shin: u32 = 0xcf9;
const XK_hebrew_taw: u32 = 0xcfa;
const XK_hebrew_taf: u32 = 0xcfa;
const XK_Hebrew_switch: u32 = 0xFF7E;

const XF86XK_ModeLock: u32 = 0x1008FF01;
const XF86XK_MonBrightnessUp: u32 = 0x1008FF02;
const XF86XK_MonBrightnessDown: u32 = 0x1008FF03;
const XF86XK_KbdLightOnOff: u32 = 0x1008FF04;
const XF86XK_KbdBrightnessUp: u32 = 0x1008FF05;
const XF86XK_KbdBrightnessDown: u32 = 0x1008FF06;
const XF86XK_Standby: u32 = 0x1008FF10;
const XF86XK_AudioLowerVolume: u32 = 0x1008FF11;
const XF86XK_AudioMute: u32 = 0x1008FF12;
const XF86XK_AudioRaiseVolume: u32 = 0x1008FF13;
const XF86XK_AudioPlay: u32 = 0x1008FF14;
const XF86XK_AudioStop: u32 = 0x1008FF15;
const XF86XK_AudioPrev: u32 = 0x1008FF16;
const XF86XK_AudioNext: u32 = 0x1008FF17;
const XF86XK_HomePage: u32 = 0x1008FF18;
const XF86XK_Mail: u32 = 0x1008FF19;
const XF86XK_Start: u32 = 0x1008FF1A;
const XF86XK_Search: u32 = 0x1008FF1B;
const XF86XK_AudioRecord: u32 = 0x1008FF1C;
const XF86XK_Calculator: u32 = 0x1008FF1D;
const XF86XK_Memo: u32 = 0x1008FF1E;
const XF86XK_ToDoList: u32 = 0x1008FF1F;
const XF86XK_Calendar: u32 = 0x1008FF20;
const XF86XK_PowerDown: u32 = 0x1008FF21;
const XF86XK_ContrastAdjust: u32 = 0x1008FF22;
const XF86XK_RockerUp: u32 = 0x1008FF23;
const XF86XK_RockerDown: u32 = 0x1008FF24;
const XF86XK_RockerEnter: u32 = 0x1008FF25;
const XF86XK_Back: u32 = 0x1008FF26;
const XF86XK_Forward: u32 = 0x1008FF27;
const XF86XK_Stop: u32 = 0x1008FF28;
const XF86XK_Refresh: u32 = 0x1008FF29;
const XF86XK_PowerOff: u32 = 0x1008FF2A;
const XF86XK_WakeUp: u32 = 0x1008FF2B;
const XF86XK_Eject: u32 = 0x1008FF2C;
const XF86XK_ScreenSaver: u32 = 0x1008FF2D;
const XF86XK_WWW: u32 = 0x1008FF2E;
const XF86XK_Sleep: u32 = 0x1008FF2F;
const XF86XK_Favorites: u32 = 0x1008FF30;
const XF86XK_AudioPause: u32 = 0x1008FF31;
const XF86XK_AudioMedia: u32 = 0x1008FF32;
const XF86XK_MyComputer: u32 = 0x1008FF33;
const XF86XK_VendorHome: u32 = 0x1008FF34;
const XF86XK_LightBulb: u32 = 0x1008FF35;
const XF86XK_Shop: u32 = 0x1008FF36;
const XF86XK_History: u32 = 0x1008FF37;
const XF86XK_OpenURL: u32 = 0x1008FF38;
const XF86XK_AddFavorite: u32 = 0x1008FF39;
const XF86XK_HotLinks: u32 = 0x1008FF3A;
const XF86XK_BrightnessAdjust: u32 = 0x1008FF3B;
const XF86XK_Finance: u32 = 0x1008FF3C;
const XF86XK_Community: u32 = 0x1008FF3D;
const XF86XK_AudioRewind: u32 = 0x1008FF3E;
const XF86XK_BackForward: u32 = 0x1008FF3F;
const XF86XK_Launch0: u32 = 0x1008FF40;
const XF86XK_Launch1: u32 = 0x1008FF41;
const XF86XK_Launch2: u32 = 0x1008FF42;
const XF86XK_Launch3: u32 = 0x1008FF43;
const XF86XK_Launch4: u32 = 0x1008FF44;
const XF86XK_Launch5: u32 = 0x1008FF45;
const XF86XK_Launch6: u32 = 0x1008FF46;
const XF86XK_Launch7: u32 = 0x1008FF47;
const XF86XK_Launch8: u32 = 0x1008FF48;
const XF86XK_Launch9: u32 = 0x1008FF49;
const XF86XK_LaunchA: u32 = 0x1008FF4A;
const XF86XK_LaunchB: u32 = 0x1008FF4B;
const XF86XK_LaunchC: u32 = 0x1008FF4C;
const XF86XK_LaunchD: u32 = 0x1008FF4D;
const XF86XK_LaunchE: u32 = 0x1008FF4E;
const XF86XK_LaunchF: u32 = 0x1008FF4F;
const XF86XK_ApplicationLeft: u32 = 0x1008FF50;
const XF86XK_ApplicationRight: u32 = 0x1008FF51;
const XF86XK_Book: u32 = 0x1008FF52;
const XF86XK_CD: u32 = 0x1008FF53;
const XF86XK_Calculater: u32 = 0x1008FF54;
const XF86XK_Clear: u32 = 0x1008FF55;
const XF86XK_Close: u32 = 0x1008FF56;
const XF86XK_Copy: u32 = 0x1008FF57;
const XF86XK_Cut: u32 = 0x1008FF58;
const XF86XK_Display: u32 = 0x1008FF59;
const XF86XK_DOS: u32 = 0x1008FF5A;
const XF86XK_Documents: u32 = 0x1008FF5B;
const XF86XK_Excel: u32 = 0x1008FF5C;
const XF86XK_Explorer: u32 = 0x1008FF5D;
const XF86XK_Game: u32 = 0x1008FF5E;
const XF86XK_Go: u32 = 0x1008FF5F;
const XF86XK_iTouch: u32 = 0x1008FF60;
const XF86XK_LogOff: u32 = 0x1008FF61;
const XF86XK_Market: u32 = 0x1008FF62;
const XF86XK_Meeting: u32 = 0x1008FF63;
const XF86XK_MenuKB: u32 = 0x1008FF65;
const XF86XK_MenuPB: u32 = 0x1008FF66;
const XF86XK_MySites: u32 = 0x1008FF67;
const XF86XK_New: u32 = 0x1008FF68;
const XF86XK_News: u32 = 0x1008FF69;
const XF86XK_OfficeHome: u32 = 0x1008FF6A;
const XF86XK_Open: u32 = 0x1008FF6B;
const XF86XK_Option: u32 = 0x1008FF6C;
const XF86XK_Paste: u32 = 0x1008FF6D;
const XF86XK_Phone: u32 = 0x1008FF6E;
const XF86XK_Q: u32 = 0x1008FF70;
const XF86XK_Reply: u32 = 0x1008FF72;
const XF86XK_Reload: u32 = 0x1008FF73;
const XF86XK_RotateWindows: u32 = 0x1008FF74;
const XF86XK_RotationPB: u32 = 0x1008FF75;
const XF86XK_RotationKB: u32 = 0x1008FF76;
const XF86XK_Save: u32 = 0x1008FF77;
const XF86XK_ScrollUp: u32 = 0x1008FF78;
const XF86XK_ScrollDown: u32 = 0x1008FF79;
const XF86XK_ScrollClick: u32 = 0x1008FF7A;
const XF86XK_Send: u32 = 0x1008FF7B;
const XF86XK_Spell: u32 = 0x1008FF7C;
const XF86XK_SplitScreen: u32 = 0x1008FF7D;
const XF86XK_Support: u32 = 0x1008FF7E;
const XF86XK_TaskPane: u32 = 0x1008FF7F;
const XF86XK_Terminal: u32 = 0x1008FF80;
const XF86XK_Tools: u32 = 0x1008FF81;
const XF86XK_Travel: u32 = 0x1008FF82;
const XF86XK_UserPB: u32 = 0x1008FF84;
const XF86XK_User1KB: u32 = 0x1008FF85;
const XF86XK_User2KB: u32 = 0x1008FF86;
const XF86XK_Video: u32 = 0x1008FF87;
const XF86XK_WheelButton: u32 = 0x1008FF88;
const XF86XK_Word: u32 = 0x1008FF89;
const XF86XK_Xfer: u32 = 0x1008FF8A;
const XF86XK_ZoomIn: u32 = 0x1008FF8B;
const XF86XK_ZoomOut: u32 = 0x1008FF8C;
const XF86XK_Away: u32 = 0x1008FF8D;
const XF86XK_Messenger: u32 = 0x1008FF8E;
const XF86XK_WebCam: u32 = 0x1008FF8F;
const XF86XK_MailForward: u32 = 0x1008FF90;
const XF86XK_Pictures: u32 = 0x1008FF91;
const XF86XK_Music: u32 = 0x1008FF92;
const XF86XK_Battery: u32 = 0x1008FF93;
const XF86XK_Bluetooth: u32 = 0x1008FF94;
const XF86XK_WLAN: u32 = 0x1008FF95;
const XF86XK_UWB: u32 = 0x1008FF96;
const XF86XK_AudioForward: u32 = 0x1008FF97;
const XF86XK_AudioRepeat: u32 = 0x1008FF98;
const XF86XK_AudioRandomPlay: u32 = 0x1008FF99;
const XF86XK_Subtitle: u32 = 0x1008FF9A;
const XF86XK_AudioCycleTrack: u32 = 0x1008FF9B;
const XF86XK_CycleAngle: u32 = 0x1008FF9C;
const XF86XK_FrameBack: u32 = 0x1008FF9D;
const XF86XK_FrameForward: u32 = 0x1008FF9E;
const XF86XK_Time: u32 = 0x1008FF9F;
const XF86XK_Select: u32 = 0x1008FFA0;
const XF86XK_View: u32 = 0x1008FFA1;
const XF86XK_TopMenu: u32 = 0x1008FFA2;
const XF86XK_Red: u32 = 0x1008FFA3;
const XF86XK_Green: u32 = 0x1008FFA4;
const XF86XK_Yellow: u32 = 0x1008FFA5;
const XF86XK_Blue: u32 = 0x1008FFA6;
const XF86XK_Suspend: u32 = 0x1008FFA7;
const XF86XK_Hibernate: u32 = 0x1008FFA8;
const XF86XK_TouchpadToggle: u32 = 0x1008FFA9;
const XF86XK_TouchpadOn: u32 = 0x1008FFB0;
const XF86XK_TouchpadOff: u32 = 0x1008FFB1;
const XF86XK_AudioMicMute: u32 = 0x1008FFB2;
const XF86XK_Switch_VT_1: u32 = 0x1008FE01;
const XF86XK_Switch_VT_2: u32 = 0x1008FE02;
const XF86XK_Switch_VT_3: u32 = 0x1008FE03;
const XF86XK_Switch_VT_4: u32 = 0x1008FE04;
const XF86XK_Switch_VT_5: u32 = 0x1008FE05;
const XF86XK_Switch_VT_6: u32 = 0x1008FE06;
const XF86XK_Switch_VT_7: u32 = 0x1008FE07;
const XF86XK_Switch_VT_8: u32 = 0x1008FE08;
const XF86XK_Switch_VT_9: u32 = 0x1008FE09;
const XF86XK_Switch_VT_10: u32 = 0x1008FE0A;
const XF86XK_Switch_VT_11: u32 = 0x1008FE0B;
const XF86XK_Switch_VT_12: u32 = 0x1008FE0C;
const XF86XK_Ungrab: u32 = 0x1008FE20;
const XF86XK_ClearGrab: u32 = 0x1008FE21;
const XF86XK_Next_VMode: u32 = 0x1008FE22;
const XF86XK_Prev_VMode: u32 = 0x1008FE23;
const XF86XK_LogWindowTree: u32 = 0x1008FE24;
const XF86XK_LogGrabInfo: u32 = 0x1008FE25;

const XK_ISO_Lock: u32 = 0xfe01;
const XK_ISO_Level2_Latch: u32 = 0xfe02;
const XK_ISO_Level3_Shift: u32 = 0xfe03;
const XK_ISO_Level3_Latch: u32 = 0xfe04;
const XK_ISO_Level3_Lock: u32 = 0xfe05;
const XK_ISO_Level5_Shift: u32 = 0xfe11;
const XK_ISO_Level5_Latch: u32 = 0xfe12;
const XK_ISO_Level5_Lock: u32 = 0xfe13;
const XK_ISO_Group_Shift: u32 = 0xff7e;
const XK_ISO_Group_Latch: u32 = 0xfe06;
const XK_ISO_Group_Lock: u32 = 0xfe07;
const XK_ISO_Next_Group: u32 = 0xfe08;
const XK_ISO_Next_Group_Lock: u32 = 0xfe09;
const XK_ISO_Prev_Group: u32 = 0xfe0a;
const XK_ISO_Prev_Group_Lock: u32 = 0xfe0b;
const XK_ISO_First_Group: u32 = 0xfe0c;
const XK_ISO_First_Group_Lock: u32 = 0xfe0d;
const XK_ISO_Last_Group: u32 = 0xfe0e;
const XK_ISO_Last_Group_Lock: u32 = 0xfe0f;

const XK_ISO_Left_Tab: u32 = 0xfe20;
const XK_ISO_Move_Line_Up: u32 = 0xfe21;
const XK_ISO_Move_Line_Down: u32 = 0xfe22;
const XK_ISO_Partial_Line_Up: u32 = 0xfe23;
const XK_ISO_Partial_Line_Down: u32 = 0xfe24;
const XK_ISO_Partial_Space_Left: u32 = 0xfe25;
const XK_ISO_Partial_Space_Right: u32 = 0xfe26;
const XK_ISO_Set_Margin_Left: u32 = 0xfe27;
const XK_ISO_Set_Margin_Right: u32 = 0xfe28;
const XK_ISO_Release_Margin_Left: u32 = 0xfe29;
const XK_ISO_Release_Margin_Right: u32 = 0xfe2a;
const XK_ISO_Release_Both_Margins: u32 = 0xfe2b;
const XK_ISO_Fast_Cursor_Left: u32 = 0xfe2c;
const XK_ISO_Fast_Cursor_Right: u32 = 0xfe2d;
const XK_ISO_Fast_Cursor_Up: u32 = 0xfe2e;
const XK_ISO_Fast_Cursor_Down: u32 = 0xfe2f;
const XK_ISO_Continuous_Underline: u32 = 0xfe30;
const XK_ISO_Discontinuous_Underline: u32 = 0xfe31;
const XK_ISO_Emphasize: u32 = 0xfe32;
const XK_ISO_Center_Object: u32 = 0xfe33;
const XK_ISO_Enter: u32 = 0xfe34;

const XK_dead_grave: u32 = 0xfe50;
const XK_dead_acute: u32 = 0xfe51;
const XK_dead_circumflex: u32 = 0xfe52;
const XK_dead_tilde: u32 = 0xfe53;
const XK_dead_perispomeni: u32 = 0xfe53;
const XK_dead_macron: u32 = 0xfe54;
const XK_dead_breve: u32 = 0xfe55;
const XK_dead_abovedot: u32 = 0xfe56;
const XK_dead_diaeresis: u32 = 0xfe57;
const XK_dead_abovering: u32 = 0xfe58;
const XK_dead_doubleacute: u32 = 0xfe59;
const XK_dead_caron: u32 = 0xfe5a;
const XK_dead_cedilla: u32 = 0xfe5b;
const XK_dead_ogonek: u32 = 0xfe5c;
const XK_dead_iota: u32 = 0xfe5d;
const XK_dead_voiced_sound: u32 = 0xfe5e;
const XK_dead_semivoiced_sound: u32 = 0xfe5f;
const XK_dead_belowdot: u32 = 0xfe60;
const XK_dead_hook: u32 = 0xfe61;
const XK_dead_horn: u32 = 0xfe62;
const XK_dead_stroke: u32 = 0xfe63;
const XK_dead_abovecomma: u32 = 0xfe64;
const XK_dead_psili: u32 = 0xfe64;
const XK_dead_abovereversedcomma: u32 = 0xfe65;
const XK_dead_dasia: u32 = 0xfe65;
const XK_dead_doublegrave: u32 = 0xfe66;
const XK_dead_belowring: u32 = 0xfe67;
const XK_dead_belowmacron: u32 = 0xfe68;
const XK_dead_belowcircumflex: u32 = 0xfe69;
const XK_dead_belowtilde: u32 = 0xfe6a;
const XK_dead_belowbreve: u32 = 0xfe6b;
const XK_dead_belowdiaeresis: u32 = 0xfe6c;
const XK_dead_invertedbreve: u32 = 0xfe6d;
const XK_dead_belowcomma: u32 = 0xfe6e;
const XK_dead_currency: u32 = 0xfe6f;

const XK_dead_lowline: u32 = 0xfe90;
const XK_dead_aboveverticalline: u32 = 0xfe91;
const XK_dead_belowverticalline: u32 = 0xfe92;
const XK_dead_longsolidusoverlay: u32 = 0xfe93;

const XK_dead_a: u32 = 0xfe80;
const XK_dead_A: u32 = 0xfe81;
const XK_dead_e: u32 = 0xfe82;
const XK_dead_E: u32 = 0xfe83;
const XK_dead_i: u32 = 0xfe84;
const XK_dead_I: u32 = 0xfe85;
const XK_dead_o: u32 = 0xfe86;
const XK_dead_O: u32 = 0xfe87;
const XK_dead_u: u32 = 0xfe88;
const XK_dead_U: u32 = 0xfe89;
const XK_dead_small_schwa: u32 = 0xfe8a;
const XK_dead_capital_schwa: u32 = 0xfe8b;

const XK_dead_greek: u32 = 0xfe8c;

const XK_First_Virtual_Screen: u32 = 0xfed0;
const XK_Prev_Virtual_Screen: u32 = 0xfed1;
const XK_Next_Virtual_Screen: u32 = 0xfed2;
const XK_Last_Virtual_Screen: u32 = 0xfed4;
const XK_Terminate_Server: u32 = 0xfed5;

const XK_AccessX_Enable: u32 = 0xfe70;
const XK_AccessX_Feedback_Enable: u32 = 0xfe71;
const XK_RepeatKeys_Enable: u32 = 0xfe72;
const XK_SlowKeys_Enable: u32 = 0xfe73;
const XK_BounceKeys_Enable: u32 = 0xfe74;
const XK_StickyKeys_Enable: u32 = 0xfe75;
const XK_MouseKeys_Enable: u32 = 0xfe76;
const XK_MouseKeys_Accel_Enable: u32 = 0xfe77;
const XK_Overlay1_Enable: u32 = 0xfe78;
const XK_Overlay2_Enable: u32 = 0xfe79;
const XK_AudibleBell_Enable: u32 = 0xfe7a;

const XK_Pointer_Left: u32 = 0xfee0;
const XK_Pointer_Right: u32 = 0xfee1;
const XK_Pointer_Up: u32 = 0xfee2;
const XK_Pointer_Down: u32 = 0xfee3;
const XK_Pointer_UpLeft: u32 = 0xfee4;
const XK_Pointer_UpRight: u32 = 0xfee5;
const XK_Pointer_DownLeft: u32 = 0xfee6;
const XK_Pointer_DownRight: u32 = 0xfee7;
const XK_Pointer_Button_Dflt: u32 = 0xfee8;
const XK_Pointer_Button1: u32 = 0xfee9;
const XK_Pointer_Button2: u32 = 0xfeea;
const XK_Pointer_Button3: u32 = 0xfeeb;
const XK_Pointer_Button4: u32 = 0xfeec;
const XK_Pointer_Button5: u32 = 0xfeed;
const XK_Pointer_DblClick_Dflt: u32 = 0xfeee;
const XK_Pointer_DblClick1: u32 = 0xfeef;
const XK_Pointer_DblClick2: u32 = 0xfef0;
const XK_Pointer_DblClick3: u32 = 0xfef1;
const XK_Pointer_DblClick4: u32 = 0xfef2;
const XK_Pointer_DblClick5: u32 = 0xfef3;
const XK_Pointer_Drag_Dflt: u32 = 0xfef4;
const XK_Pointer_Drag1: u32 = 0xfef5;
const XK_Pointer_Drag2: u32 = 0xfef6;
const XK_Pointer_Drag3: u32 = 0xfef7;
const XK_Pointer_Drag4: u32 = 0xfef8;
const XK_Pointer_Drag5: u32 = 0xfefd;

const XK_Pointer_EnableKeys: u32 = 0xfef9;
const XK_Pointer_Accelerate: u32 = 0xfefa;
const XK_Pointer_DfltBtnNext: u32 = 0xfefb;
const XK_Pointer_DfltBtnPrev: u32 = 0xfefc;

const XK_ch: u32 = 0xfea0;
const XK_Ch: u32 = 0xfea1;
const XK_CH: u32 = 0xfea2;
const XK_c_h: u32 = 0xfea3;
const XK_C_h: u32 = 0xfea4;
const XK_C_H: u32 = 0xfea5;

pub struct Keymap {
    keysyms: Vec<u32>,
    keysyms_per_keycode: u8,
    min_keycode: u8,
}

impl Keymap {
    pub fn new(keysyms: Vec<u32>, keysyms_per_keycode: u8, min_keycode: u8) -> Self {
        Self {
            keysyms,
            keysyms_per_keycode,
            min_keycode,
        }
    }

    pub fn get_keysym(&self, keycode: u8, state: u16) -> u32 {
        self.keysyms[state as usize
            + (keycode - self.min_keycode) as usize * self.keysyms_per_keycode as usize]
    }

    pub const fn get_key(&self, keysym: u32) -> &'static str {
        match keysym {
            XK_space => " ",
            XK_0 => "0",
            XK_1 => "1",
            XK_2 => "2",
            XK_3 => "3",
            XK_4 => "4",
            XK_5 => "5",
            XK_6 => "6",
            XK_7 => "7",
            XK_8 => "8",
            XK_9 => "9",
            XK_A => "A",
            XK_B => "B",
            XK_C => "C",
            XK_D => "D",
            XK_E => "E",
            XK_F => "F",
            XK_G => "G",
            XK_H => "H",
            XK_I => "I",
            XK_J => "J",
            XK_K => "K",
            XK_L => "L",
            XK_M => "M",
            XK_N => "N",
            XK_O => "O",
            XK_P => "P",
            XK_Q => "Q",
            XK_R => "R",
            XK_S => "S",
            XK_T => "T",
            XK_U => "U",
            XK_V => "V",
            XK_W => "W",
            XK_X => "X",
            XK_Y => "Y",
            XK_Z => "Z",
            XK_a => "a",
            XK_b => "b",
            XK_c => "c",
            XK_d => "d",
            XK_e => "e",
            XK_f => "f",
            XK_g => "g",
            XK_h => "h",
            XK_i => "i",
            XK_j => "j",
            XK_k => "k",
            XK_l => "l",
            XK_m => "m",
            XK_n => "n",
            XK_o => "o",
            XK_p => "p",
            XK_q => "q",
            XK_r => "r",
            XK_s => "s",
            XK_t => "t",
            XK_u => "u",
            XK_v => "v",
            XK_w => "w",
            XK_x => "x",
            XK_y => "y",
            XK_z => "z",
            _ => "",
        }
    }
}

pub fn is_escape(keysym: u32) -> bool {
    XK_Escape == keysym
}

pub fn is_return(keysym: u32) -> bool {
    XK_Return == keysym
}

pub fn is_backspace(keysym: u32) -> bool {
    XK_BackSpace == keysym
}

pub fn is_left(keysym: u32) -> bool {
    XK_Left == keysym
}

pub fn is_right(keysym: u32) -> bool {
    XK_Right == keysym
}
